@import '~@angular/material/theming';

@include mat-core();

$contrast: (
  50: $dark-primary-text,
  100: $dark-primary-text,
  200: $dark-primary-text,
  300: $dark-primary-text,
  400: $dark-primary-text,
  500: $light-primary-text,
  600: $light-primary-text,
  700: $light-primary-text,
  800: $light-primary-text,
  900: $light-primary-text,
  A100: $dark-primary-text,
  A200: $dark-primary-text,
  A400: $dark-primary-text,
  A700: $dark-primary-text,
);

@function get-main-color($color-scheme) {
  @return map-get($color-scheme, 500);
}

@function get-selection-background($color-scheme) {
  @return map-get($color-scheme, 50);
}

@function get-table-hover-color($color) {
  @return rgba($color, 0.08);
}

@function get-background-color($color-scheme) {
  @return map-get($color-scheme, background-color);
}

@mixin build-custom-theme($primary-palette, $warn-palette: mat-palette($mat-red), $theme-name: 'undefined') {
  $material-addons-colors-primary: mat-palette($primary-palette);
  $material-addons-colors-warn: $warn-palette;
  $material-addons-theme: mat-light-theme($material-addons-colors-primary, $material-addons-colors-primary, $material-addons-colors-warn);

  $hover-color: mat-palette($primary-palette, 50);

  @include angular-material-theme($material-addons-theme);

  @if variable-exists(table-hover-color) {
    .clickable-table-row:hover,
    .mat-row-link:hover {
      background-color: $table-hover-color;
    }
  } @else {
    @warn 'variable $table-hover-color in theme #{$theme-name} is not defined';
  }

  @if variable_exists(warn-color) {
    .mat-form-field-required-marker {
      color: $warn-color;
    }

    .mat-chip.mat-standard-chip.mat-warn {
      color: $warn-color;
      border: 1px solid $warn-color;
    }
  } @else {
    @warn 'variable $warn-color in theme #{$theme-name} is not defined';
  }

  @if variable_exists(main-primary) {
    .mat-chip-selected {
      border: 1px solid $main-primary !important;
      color: $main-primary !important;
    }
  } @else {
    @warn 'variable $main-primary  in theme #{$theme-name} is not defined';
  }

  .mat-chip-selected {
    background-color: white !important;
  }
}

body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

a {
  color: inherit;
  text-decoration: inherit;
}

.spacer {
  flex: 1 1 auto;
}

table {
  width: 100%;
}

.mat-input-element:disabled {
  cursor: auto;
  color: black;
}

.mat-select-disabled .mat-select-value {
  color: black;
}

.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {
  color: white;
}

.mat-checkbox-disabled .mat-checkbox-label {
  color: black;
}

.clickable-table-row:hover,
.mat-row-link:hover {
  cursor: pointer;
}

.button-panel {
  display: flex;
  flex-direction: row;
  padding-top: 16px;
  padding-bottom: 8px;
  padding-right: 16px;
}

.button-panel button {
  margin-right: 8px;
}

.simple-edit-section {
  display: flex;
  flex-direction: column;
}

.simple-edit-section > * {
  width: 100%;
  max-width: 640px;
}

.tiny-table-section {
  display: flex;
  flex-direction: column;
}

.table-condensed > .mat-row {
  min-height: 36px;
}

.small-input {
  max-width: 90px !important;
}

.tiny-input {
  max-width: 60px !important;
}

.main-content {
  padding: 73px 16px 16px;
}

.mat-tab-header {
  margin: -16px -16px 16px;
}

.mat-row {
  position: relative;
}

.mat-row-link {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
}

.mat-button,
.mat-flat-button,
.mat-raised-button,
.mat-stroked-button,
.mat-icon-button {
  text-transform: uppercase;
}

.toolbar-title {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.mat-select-disabled {
  color: rgba(0, 0, 0, 0.38);
}

.sticky-paginator {
  background-color: white;
  position: fixed;
  padding-right: 16px;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 5;
  text-align: right;
}

.with-sticky-paginator {
  padding-bottom: 64px;
}

.criteria-panel {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
}

.criteria-panel > * {
  padding-right: 16px;
}

.mat-chip.mat-standard-chip {
  background-color: white;
  color: rgba(0, 0, 0, 0.87);
  border: 1px solid rgba(0, 0, 0, 0.4);
}

.mat-chip.mat-standard-chip.mat-warn {
  background-color: white;
}

.mat-tab-group {
  max-width: 100%;
}

.large-icon {
  font-size: xx-large;
}

.transparent .mat-dialog-container {
  box-shadow: none;
  background: rgba(0, 0, 0, 0);
}

.fixedtabs {
  .mat-tab-header {
    z-index: 10;
    width: 100vw;
    position: fixed;
    background-color: white;
  }
}

.mat-dialog-actions {
  justify-content: flex-end;
}

.mat-card-header-text {
  margin: 0 !important;
}

@mixin ellipsis-text-overflow {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.ellipsis-text-overflow {
  @include ellipsis-text-overflow;
}
@media print {
  .no-print, .no-print * {
    display: none !important;
    width: 0 !important;
    height: 0 !important;
  }

  mat-paginator {
    display: none !important;
    height: 0 !important;
  }

  mat-sidenav-content {
    margin: 0 !important;
  }

  .mat-raised-button, .mat-stroked-button, .button-panel {
    display: none !important;
  }

  .criteria-panel {
    display: none !important;
    height: 0 !important;
  }

  async-autocomplete mat-icon {
    display: none !important;
  }

  .mat-tab-label:not(.mat-tab-label-active) {
    display: none !important;
  }
}
