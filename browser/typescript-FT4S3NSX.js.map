{"version":3,"sources":["node_modules/highlight.js/es/languages/typescript.js"],"sourcesContent":["const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\"as\",\n// for exports\n\"in\", \"of\", \"if\", \"for\", \"while\", \"finally\", \"var\", \"new\", \"function\", \"do\", \"return\", \"void\", \"else\", \"break\", \"catch\", \"instanceof\", \"with\", \"throw\", \"case\", \"default\", \"try\", \"switch\", \"continue\", \"typeof\", \"delete\", \"let\", \"yield\", \"const\", \"class\",\n// JS handles these with a special rule\n// \"get\",\n// \"set\",\n\"debugger\", \"async\", \"await\", \"static\", \"import\", \"from\", \"export\", \"extends\",\n// It's reached stage 3, which is \"recommended for implementation\":\n\"using\"];\nconst LITERALS = [\"true\", \"false\", \"null\", \"undefined\", \"NaN\", \"Infinity\"];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n// Fundamental objects\n\"Object\", \"Function\", \"Boolean\", \"Symbol\",\n// numbers and dates\n\"Math\", \"Date\", \"Number\", \"BigInt\",\n// text\n\"String\", \"RegExp\",\n// Indexed collections\n\"Array\", \"Float32Array\", \"Float64Array\", \"Int8Array\", \"Uint8Array\", \"Uint8ClampedArray\", \"Int16Array\", \"Int32Array\", \"Uint16Array\", \"Uint32Array\", \"BigInt64Array\", \"BigUint64Array\",\n// Keyed collections\n\"Set\", \"Map\", \"WeakSet\", \"WeakMap\",\n// Structured data\n\"ArrayBuffer\", \"SharedArrayBuffer\", \"Atomics\", \"DataView\", \"JSON\",\n// Control abstraction objects\n\"Promise\", \"Generator\", \"GeneratorFunction\", \"AsyncFunction\",\n// Reflection\n\"Reflect\", \"Proxy\",\n// Internationalization\n\"Intl\",\n// WebAssembly\n\"WebAssembly\"];\nconst ERROR_TYPES = [\"Error\", \"EvalError\", \"InternalError\", \"RangeError\", \"ReferenceError\", \"SyntaxError\", \"TypeError\", \"URIError\"];\nconst BUILT_IN_GLOBALS = [\"setInterval\", \"setTimeout\", \"clearInterval\", \"clearTimeout\", \"require\", \"exports\", \"eval\", \"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"decodeURI\", \"decodeURIComponent\", \"encodeURI\", \"encodeURIComponent\", \"escape\", \"unescape\"];\nconst BUILT_IN_VARIABLES = [\"arguments\", \"this\", \"super\", \"console\", \"window\", \"document\", \"localStorage\", \"sessionStorage\", \"module\", \"global\" // Node.js\n];\nconst BUILT_INS = [].concat(BUILT_IN_GLOBALS, TYPES, ERROR_TYPES);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, {\n    after\n  }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n      // HTML should not include another raw `<` inside a tag\n      // nested type?\n      // `<Array<Array<number>>`, etc.\n      nextChar === \"<\" ||\n      // the , gives away that this is not HTML\n      // `<T, A extends keyof T, V>`\n      nextChar === \",\") {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, {\n          after: afterMatchIndex\n        })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if (m = afterMatch.match(/^\\s*=/)) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if (m = afterMatch.match(/^\\s+extends\\s+/)) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n    // DecimalLiteral\n    {\n      begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` + `[eE][+-]?(${decimalDigits})\\\\b`\n    }, {\n      begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b`\n    },\n    // DecimalBigIntegerLiteral\n    {\n      begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b`\n    },\n    // NonDecimalIntegerLiteral\n    {\n      begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\"\n    }, {\n      begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\"\n    }, {\n      begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\"\n    },\n    // LegacyOctalIntegerLiteral (does not include underscore separators)\n    // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n    {\n      begin: \"\\\\b0[0-7]+n?\\\\b\"\n    }],\n    relevance: 0\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: '\\.?html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: '\\.?css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'css'\n    }\n  };\n  const GRAPHQL_TEMPLATE = {\n    begin: '\\.?gql`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'graphql'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(/\\/\\*\\*(?!\\/)/, '\\\\*/', {\n    relevance: 0,\n    contains: [{\n      begin: '(?=@[A-Za-z]+)',\n      relevance: 0,\n      contains: [{\n        className: 'doctag',\n        begin: '@[A-Za-z]+'\n      }, {\n        className: 'type',\n        begin: '\\\\{',\n        end: '\\\\}',\n        excludeEnd: true,\n        excludeBegin: true,\n        relevance: 0\n      }, {\n        className: 'variable',\n        begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n        endsParent: true,\n        relevance: 0\n      },\n      // eat spaces (not newlines) so we can find\n      // types or variables\n      {\n        begin: /(?=[^\\n])\\s/,\n        relevance: 0\n      }]\n    }]\n  });\n  const COMMENT = {\n    className: \"comment\",\n    variants: [JSDOC_COMMENT, hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE]\n  };\n  const SUBST_INTERNALS = [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, HTML_TEMPLATE, CSS_TEMPLATE, GRAPHQL_TEMPLATE, TEMPLATE_STRING,\n  // Skip numbers when they are part of a variable name\n  {\n    match: /\\$\\d+/\n  }, NUMBER\n  // This is intentional:\n  // See https://github.com/highlightjs/highlight.js/issues/3288\n  // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS.concat({\n    // we need to pair up {} inside our subst to prevent\n    // it from ending too early by matching another }\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS$1,\n    contains: [\"self\"].concat(SUBST_INTERNALS)\n  });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n  // eat recursive parens in sub expressions\n  {\n    begin: /(\\s*)\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS$1,\n    contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n  }]);\n  const PARAMS = {\n    className: 'params',\n    // convert this to negative lookbehind in v12\n    begin: /(\\s*)\\(/,\n    // to match the parms with\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n    // class Car extends vehicle\n    {\n      match: [/class/, /\\s+/, IDENT_RE$1, /\\s+/, /extends/, /\\s+/, regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")],\n      scope: {\n        1: \"keyword\",\n        3: \"title.class\",\n        5: \"keyword\",\n        7: \"title.class.inherited\"\n      }\n    },\n    // class Car\n    {\n      match: [/class/, /\\s+/, IDENT_RE$1],\n      scope: {\n        1: \"keyword\",\n        3: \"title.class\"\n      }\n    }]\n  };\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: regex.either(\n    // Hard coded exceptions\n    /\\bJSON/,\n    // Float32Array, OutT\n    /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n    // CSSFactory, CSSFactoryT\n    /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n    // FPs, FPsT\n    /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/\n    // P\n    // single letters are not highlighted\n    // BLAH\n    // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n      // se we still get relevance credit for JS library classes\n      ...TYPES, ...ERROR_TYPES]\n    }\n  };\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n  const FUNCTION_DEFINITION = {\n    variants: [{\n      match: [/function/, /\\s+/, IDENT_RE$1, /(?=\\s*\\()/]\n    },\n    // anonymous function\n    {\n      match: [/function/, /\\s*(?=\\()/]\n    }],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [PARAMS],\n    illegal: /%/\n  };\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n  const FUNCTION_CALL = {\n    match: regex.concat(/\\b/, noneOf([...BUILT_IN_GLOBALS, \"super\", \"import\"].map(x => `${x}\\\\s*\\\\(`)), IDENT_RE$1, regex.lookahead(/\\s*\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/))),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n  const GETTER_OR_SETTER = {\n    match: [/get|set/, /\\s+/, IDENT_RE$1, /(?=\\()/],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [{\n      // eat to avoid empty params\n      begin: /\\(\\)/\n    }, PARAMS]\n  };\n  const FUNC_LEAD_IN_RE = '(\\\\(' + '[^()]*(\\\\(' + '[^()]*(\\\\(' + '[^()]*' + '\\\\)[^()]*)*' + '\\\\)[^()]*)*' + '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n  const FUNCTION_VARIABLE = {\n    match: [/const|var|let/, /\\s+/, IDENT_RE$1, /\\s*/, /=\\s*/, /(async\\s*)?/,\n    // async is optional\n    regex.lookahead(FUNC_LEAD_IN_RE)],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [PARAMS]\n  };\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: {\n      PARAMS_CONTAINS,\n      CLASS_REFERENCE\n    },\n    illegal: /#(?![$_A-z])/,\n    contains: [hljs.SHEBANG({\n      label: \"shebang\",\n      binary: \"node\",\n      relevance: 5\n    }), USE_STRICT, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, HTML_TEMPLATE, CSS_TEMPLATE, GRAPHQL_TEMPLATE, TEMPLATE_STRING, COMMENT,\n    // Skip numbers when they are part of a variable name\n    {\n      match: /\\$\\d+/\n    }, NUMBER, CLASS_REFERENCE, {\n      scope: 'attr',\n      match: IDENT_RE$1 + regex.lookahead(':'),\n      relevance: 0\n    }, FUNCTION_VARIABLE, {\n      // \"value\" container\n      begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n      keywords: 'return throw case',\n      relevance: 0,\n      contains: [COMMENT, hljs.REGEXP_MODE, {\n        className: 'function',\n        // we have to count the parens to make sure we actually have the\n        // correct bounding ( ) before the =>.  There could be any number of\n        // sub-expressions inside also surrounded by parens.\n        begin: FUNC_LEAD_IN_RE,\n        returnBegin: true,\n        end: '\\\\s*=>',\n        contains: [{\n          className: 'params',\n          variants: [{\n            begin: hljs.UNDERSCORE_IDENT_RE,\n            relevance: 0\n          }, {\n            className: null,\n            begin: /\\(\\s*\\)/,\n            skip: true\n          }, {\n            begin: /(\\s*)\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS$1,\n            contains: PARAMS_CONTAINS\n          }]\n        }]\n      }, {\n        // could be a comma delimited list of params to a function call\n        begin: /,/,\n        relevance: 0\n      }, {\n        match: /\\s+/,\n        relevance: 0\n      }, {\n        // JSX\n        variants: [{\n          begin: FRAGMENT.begin,\n          end: FRAGMENT.end\n        }, {\n          match: XML_SELF_CLOSING\n        }, {\n          begin: XML_TAG.begin,\n          // we carefully check the opening tag to see if it truly\n          // is a tag and not a false positive\n          'on:begin': XML_TAG.isTrulyOpeningTag,\n          end: XML_TAG.end\n        }],\n        subLanguage: 'xml',\n        contains: [{\n          begin: XML_TAG.begin,\n          end: XML_TAG.end,\n          skip: true,\n          contains: ['self']\n        }]\n      }]\n    }, FUNCTION_DEFINITION, {\n      // prevent this from getting swallowed up by function\n      // since they appear \"function like\"\n      beginKeywords: \"while if switch catch for\"\n    }, {\n      // we have to count the parens to make sure we actually have the correct\n      // bounding ( ).  There could be any number of sub-expressions inside\n      // also surrounded by parens.\n      begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE + '\\\\(' +\n      // first parens\n      '[^()]*(\\\\(' + '[^()]*(\\\\(' + '[^()]*' + '\\\\)[^()]*)*' + '\\\\)[^()]*)*' + '\\\\)\\\\s*\\\\{',\n      // end parens\n      returnBegin: true,\n      label: \"func.def\",\n      contains: [PARAMS, hljs.inherit(hljs.TITLE_MODE, {\n        begin: IDENT_RE$1,\n        className: \"title.function\"\n      })]\n    },\n    // catch ... so it won't trigger the property rule below\n    {\n      match: /\\.\\.\\./,\n      relevance: 0\n    }, PROPERTY_ACCESS,\n    // hack: prevents detection of keywords in some circumstances\n    // .keyword()\n    // $keyword = x\n    {\n      match: '\\\\$' + IDENT_RE$1,\n      relevance: 0\n    }, {\n      match: [/\\bconstructor(?=\\s*\\()/],\n      className: {\n        1: \"title.function\"\n      },\n      contains: [PARAMS]\n    }, FUNCTION_CALL, UPPER_CASE_CONSTANT, CLASS_OR_EXTENDS, GETTER_OR_SETTER, {\n      match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n    }]\n  };\n}\n\n/*\nLanguage: TypeScript\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\nContributors: Ike Ku <dempfi@yahoo.com>\nDescription: TypeScript is a strict superset of JavaScript\nWebsite: https://www.typescriptlang.org\nCategory: common, scripting\n*/\n\n/** @type LanguageFn */\nfunction typescript(hljs) {\n  const regex = hljs.regex;\n  const tsLanguage = javascript(hljs);\n  const IDENT_RE$1 = IDENT_RE;\n  const TYPES = [\"any\", \"void\", \"number\", \"boolean\", \"string\", \"object\", \"never\", \"symbol\", \"bigint\", \"unknown\"];\n  const NAMESPACE = {\n    begin: [/namespace/, /\\s+/, hljs.IDENT_RE],\n    beginScope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    }\n  };\n  const INTERFACE = {\n    beginKeywords: 'interface',\n    end: /\\{/,\n    excludeEnd: true,\n    keywords: {\n      keyword: 'interface extends',\n      built_in: TYPES\n    },\n    contains: [tsLanguage.exports.CLASS_REFERENCE]\n  };\n  const USE_STRICT = {\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use strict['\"]/\n  };\n  const TS_SPECIFIC_KEYWORDS = [\"type\",\n  // \"namespace\",\n  \"interface\", \"public\", \"private\", \"protected\", \"implements\", \"declare\", \"abstract\", \"readonly\", \"enum\", \"override\", \"satisfies\"];\n  /*\n    namespace is a TS keyword but it's fine to use it as a variable name too.\n    const message = 'foo';\n    const namespace = 'bar';\n  */\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\n    literal: LITERALS,\n    built_in: BUILT_INS.concat(TYPES),\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n  const DECORATOR = {\n    className: 'meta',\n    begin: '@' + IDENT_RE$1\n  };\n  const swapMode = (mode, label, replacement) => {\n    const indx = mode.contains.findIndex(m => m.label === label);\n    if (indx === -1) {\n      throw new Error(\"can not find mode to replace\");\n    }\n    mode.contains.splice(indx, 1, replacement);\n  };\n\n  // this should update anywhere keywords is used since\n  // it will be the same actual JS object\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\n\n  // highlight the function params\n  const ATTRIBUTE_HIGHLIGHT = tsLanguage.contains.find(c => c.scope === \"attr\");\n\n  // take default attr rule and extend it to support optionals\n  const OPTIONAL_KEY_OR_ARGUMENT = Object.assign({}, ATTRIBUTE_HIGHLIGHT, {\n    match: regex.concat(IDENT_RE$1, regex.lookahead(/\\s*\\?:/))\n  });\n  tsLanguage.exports.PARAMS_CONTAINS.push([tsLanguage.exports.CLASS_REFERENCE,\n  // class reference for highlighting the params types\n  ATTRIBUTE_HIGHLIGHT,\n  // highlight the params key\n  OPTIONAL_KEY_OR_ARGUMENT // Added for optional property assignment highlighting\n  ]);\n\n  // Add the optional property assignment highlighting for objects or classes\n  tsLanguage.contains = tsLanguage.contains.concat([DECORATOR, NAMESPACE, INTERFACE, OPTIONAL_KEY_OR_ARGUMENT // Added for optional property assignment highlighting\n  ]);\n\n  // TS gets a simpler shebang rule than JS\n  swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\n  // JS use strict rule purposely excludes `asm` which makes no sense\n  swapMode(tsLanguage, \"use_strict\", USE_STRICT);\n  const functionDeclaration = tsLanguage.contains.find(m => m.label === \"func.def\");\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\n\n  Object.assign(tsLanguage, {\n    name: 'TypeScript',\n    aliases: ['ts', 'tsx', 'mts', 'cts']\n  });\n  return tsLanguage;\n}\nexport { typescript as default };"],"mappings":"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","names":["TYPES"],"x_google_ignoreList":[0]}