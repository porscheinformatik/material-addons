{"version":3,"sources":["node_modules/highlight.js/es/languages/xml.js"],"sourcesContent":["/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex;\n  // XML names can have the following additional letters: https://www.w3.org/TR/xml/#NT-NameChar\n  // OTHER_NAME_CHARS = /[:\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]/;\n  // Element names start with NAME_START_CHAR followed by optional other Unicode letters, ASCII digits, hyphens, underscores, and periods\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);;\n  // const XML_IDENT_RE = /[A-Z_a-z:\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]+/;\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);\n  // however, to cater for performance and more Unicode support rely simply on the Unicode letter class\n  const TAG_NAME_RE = regex.concat(/[\\p{L}_]/u, regex.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u);\n  const XML_IDENT_RE = /[\\p{L}0-9._:-]+/u;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [{\n      className: 'keyword',\n      begin: /#?[a-z_][a-z1-9_-]+/,\n      illegal: /\\n/\n    }]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: XML_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /=\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'string',\n        endsParent: true,\n        variants: [{\n          begin: /\"/,\n          end: /\"/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /'/,\n          end: /'/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /[^\\s\"'=<>`]+/\n        }]\n      }]\n    }]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    unicodeRegex: true,\n    contains: [{\n      className: 'meta',\n      begin: /<![a-z]/,\n      end: />/,\n      relevance: 10,\n      contains: [XML_META_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE, XML_META_PAR_KEYWORDS, {\n        begin: /\\[/,\n        end: /\\]/,\n        contains: [{\n          className: 'meta',\n          begin: /<![a-z]/,\n          end: />/,\n          contains: [XML_META_KEYWORDS, XML_META_PAR_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE]\n        }]\n      }]\n    }, hljs.COMMENT(/<!--/, /-->/, {\n      relevance: 10\n    }), {\n      begin: /<!\\[CDATA\\[/,\n      end: /\\]\\]>/,\n      relevance: 10\n    }, XML_ENTITIES,\n    // xml processing instructions\n    {\n      className: 'meta',\n      end: /\\?>/,\n      variants: [{\n        begin: /<\\?xml/,\n        relevance: 10,\n        contains: [QUOTE_META_STRING_MODE]\n      }, {\n        begin: /<\\?[a-z][a-z0-9]+/\n      }]\n    }, {\n      className: 'tag',\n      /*\n      The lookahead pattern (?=...) ensures that 'begin' only matches\n      '<style' as a single word, followed by a whitespace or an\n      ending bracket.\n      */\n      begin: /<style(?=\\s|>)/,\n      end: />/,\n      keywords: {\n        name: 'style'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: /<\\/style>/,\n        returnEnd: true,\n        subLanguage: ['css', 'xml']\n      }\n    }, {\n      className: 'tag',\n      // See the comment in the <style tag about the lookahead pattern\n      begin: /<script(?=\\s|>)/,\n      end: />/,\n      keywords: {\n        name: 'script'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: /<\\/script>/,\n        returnEnd: true,\n        subLanguage: ['javascript', 'handlebars', 'xml']\n      }\n    },\n    // we need this for now for jSX\n    {\n      className: 'tag',\n      begin: /<>|<\\/>/\n    },\n    // open tag\n    {\n      className: 'tag',\n      begin: regex.concat(/</, regex.lookahead(regex.concat(TAG_NAME_RE,\n      // <tag/>\n      // <tag>\n      // <tag ...\n      regex.either(/\\/>/, />/, /\\s/)))),\n      end: /\\/?>/,\n      contains: [{\n        className: 'name',\n        begin: TAG_NAME_RE,\n        relevance: 0,\n        starts: TAG_INTERNALS\n      }]\n    },\n    // close tag\n    {\n      className: 'tag',\n      begin: regex.concat(/<\\//, regex.lookahead(regex.concat(TAG_NAME_RE, />/))),\n      contains: [{\n        className: 'name',\n        begin: TAG_NAME_RE,\n        relevance: 0\n      }, {\n        begin: />/,\n        relevance: 0,\n        endsParent: true\n      }]\n    }]\n  };\n}\nexport { xml as default };"],"mappings":"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","names":[],"x_google_ignoreList":[0]}